# 6.1.	Kafka Source Connector

# kubectl get pods -l app=postgres

POSTGRES_POD=$(kubectl get pods -l app=postgres -o jsonpath='{.items[0].metadata.name}')

또는

POSTGRES_POD=`kubectl get pods -l app=postgres -o jsonpath='{.items[0].metadata.name}'`

kubectl exec $POSTGRES_POD -it -- psql -U postgres

\l
\c
또는
\c postgres

# 6.2.	Kafka Sink Connector
# kubectl get pods -l app=postgres-legacy
POSTGRES_L_POD=$(kubectl get pods -l app=postgres-legacy -o jsonpath='{.items[0].metadata.name}')

또는

POSTGRES_L_POD=`kubectl get pods -l app=postgres-legacy -o jsonpath='{.items[0].metadata.name}'`

kubectl exec $POSTGRES_L_POD -it -- psql -U postgres

\l
\c
\c postgres

# 6.3. Test CDC from Postgres to Postgres using Kafka Connector
  CREATE TABLE user00 (
    id SERIAL PRIMARY KEY  NOT NULL,
    name VARCHAR(255) NOT NULL,
    update_dt timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL
  );

insert into user00 (name) values ('user00-01');

kubectl exec  kafka-client -it -- /usr/bin/kafka-console-consumer --topic postgres_source_user00  --bootstrap-server kafka:9092 --from-beginning

# legacy db 연결
kubectl exec $POSTGRES_L_POD -it -- psql -U postgres
\c postgres
\dt
select * from postgres_source_user00;

# 6.4.MySQL Sink Connector
kubectl exec -it kafka-client -- \
curl -X POST  http://kafka-connect:8083/connectors -H "Content-Type: application/json" -d '
{
  "name": "jdbc_sink_mysql_user00",
  "config": {
    "connector.class":"io.confluent.connect.jdbc.JdbcSinkConnector",
    "tasks.max":"1",
    "connection.url":"jdbc:mysql://mysql:3306/testdb",
    "connection.user": "root",
    "connection.password": "passw0rd",
    "poll.interval.ms": "3600",
    "table.poll.interval.ms": "5000",
    "topics.regex": "postgres_source_user00",
    "auto.create": "true",
    "errors.tolerance": "all",
    "errors.log.enable": true,
    "errors.log.include.messages": true
  }
}
'

kubectl exec -it kafka-client -- \
curl -X GET http://mysql-connect:8083/connectors -H "Content-Type: application/json"

POSTGRES_POD=`kubectl get pods -l app=postgres -o jsonpath='{.items[0].metadata.name}'`
or
POSTGRES_POD=$(kubectl get pods -l app=postgres -o jsonpath='{.items[0].metadata.name}')

# postgres pod name : postgres-7c97596dd4-924hr

kubectl exec $POSTGRES_POD -it -- psql -U postgres

또는

kubectl exec -it $POSTGRES_POD  -- psql -U postgres

\l
\c postgres
또는
\c

insert into user00 (name) values ('user00-02');
insert into user00 (name) values ('user00-03');

# Get MySQL Pod Name 
MYSQL_POD=$(kubectl get pods -l app=mysql -o jsonpath='{.items[0].metadata.name}') 
# MySQL pod name : mysql-7594c6d5f5-r9wh5

# Connect mysql
 MYSQL_POD=$(kubectl get pods -l app=mysql -o jsonpath='{.items[0].metadata.name}')

show databases;

use testdb;

select * from postgres_source_user00;

